#include <WiFi.h>
#include "EmbeddedMqttBroker.h"
#include <SPI.h>
#include <Wire.h>
#include "HT_SSD1306Wire.h"
#include "heltec.h"
using namespace mqttBrokerName;

// WiFi-Konfiguration
const char* ssid = "EndlichGutesWLAN 2,4Ghz";
const char* password = "Helblingstrasse5";

// MQTT-Broker-Einstellungen
uint16_t mqttPort = 8883;
MqttBroker broker(mqttPort);
String lorastring;

// OLED-Konfiguration
#ifdef WIRELESS_STICK_V3
static SSD1306Wire display(0x3c, 500000, SDA_OLED, SCL_OLED, GEOMETRY_64_32, RST_OLED);
#else
static SSD1306Wire display(0x3c, 500000, SDA_OLED, SCL_OLED, GEOMETRY_128_64, RST_OLED);
#endif

void displayMessage(const String& message) {
  display.clear();
  display.setFont(ArialMT_Plain_16);
  display.drawString(0, 0, message);
  display.display();
}

void setup() {
  Heltec.begin(true /*Display*/, true /*LoRa*/, true /*Serial*/);
  Serial.begin(115200);
  Serial.println("MQTT Broker mit LoRa startet...");
  
  // OLED initialisieren
  display.init();
  display.setContrast(255);
  display.clear();
  display.display();
  
  // WiFi initialisieren und verbinden
  Serial.print("Verbinden mit ");
  Serial.println(ssid);
  displayMessage("Verbinde mit WiFi:");
  displayMessage(ssid);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("WiFi verbunden");
  displayMessage("WiFi verbunden");

  // LoRa spezifische Einstellungen
  //LoRa.setFrequency(868E6);           // Frequenz auf 868 MHz setzen
  //LoRa.setSpreadingFactor(7);         // Spreading Factor (SF7)
  //LoRa.setSignalBandwidth(125E3);     // Bandbreite auf 125 kHz setzen
  //LoRa.setCodingRate4(5);             // Coding Rate auf 4/5 setzen
  //LoRa.setPreambleLength(8);          // Preamble-Länge auf 8 Symbole setzen
  //LoRa.enableCrc();                   // CRC aktivieren
  Serial.println("LoRa Konfiguration abgeschlossen");
  displayMessage("LoRa bereit!");

  // MQTT-Broker starten
  broker.setMaxNumClients(9);
  broker.startBroker();
  displayMessage("MQTT gestartet!");
}

void loop() {
  int paketlaenge = LoRa.parsePacket();  // Verwenden Sie weiterhin LoRa über die Heltec-Instanz
  if (paketlaenge) {
    Serial.println("LoRa-Paket empfangen!");
    lora_paket();

    Serial.print("Inhalt des Pakets: ");
    Serial.println(lorastring);

    PublishMqttMessage publishMsg;
    publishMsg.setTopic("sensor/pm");  // Setze das Topic direkt als String
    publishMsg.setPayLoad(lorastring);  // Setze den empfangenen LoRa-String als Payload

    // Nachricht über den Broker veröffentlichen
    broker.publishMessage(&publishMsg);

    Serial.println("Nachricht über MQTT verteilt.");
    displayMessage("Paket empfangen und verteilt");
  }
  delay(100);
}

void lora_paket() {
  lorastring = "";
  while (LoRa.available()) {
    lorastring += (char)LoRa.read();
  }
}
